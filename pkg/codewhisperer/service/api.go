// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package service

import (
	"fmt"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/awsutil"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/private/protocol"
)

const opCreateArtifactUploadUrl = "CreateArtifactUploadUrl"

// CreateArtifactUploadUrlRequest generates a "aws/request.Request" representing the
// client's request for the CreateArtifactUploadUrl operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateArtifactUploadUrl for more information on using the CreateArtifactUploadUrl
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the CreateArtifactUploadUrlRequest method.
//	req, resp := client.CreateArtifactUploadUrlRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/codewhispererruntime-2022-11-11/CreateArtifactUploadUrl
func (c *CodeWhisperer) CreateArtifactUploadUrlRequest(input *CreateArtifactUploadUrlInput) (req *request.Request, output *CreateArtifactUploadUrlOutput) {
	op := &request.Operation{
		Name:       opCreateArtifactUploadUrl,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateArtifactUploadUrlInput{}
	}

	output = &CreateArtifactUploadUrlOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateArtifactUploadUrl API operation for Amazon CodeWhisperer.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CodeWhisperer's
// API operation CreateArtifactUploadUrl for usage and error information.
//
// Returned Error Types:
//
//   - ThrottlingException
//
//   - InternalServerException
//
//   - ValidationException
//
//   - AccessDeniedException
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/codewhispererruntime-2022-11-11/CreateArtifactUploadUrl
func (c *CodeWhisperer) CreateArtifactUploadUrl(input *CreateArtifactUploadUrlInput) (*CreateArtifactUploadUrlOutput, error) {
	req, out := c.CreateArtifactUploadUrlRequest(input)
	return out, req.Send()
}

// CreateArtifactUploadUrlWithContext is the same as CreateArtifactUploadUrl with the addition of
// the ability to pass a context and additional request options.
//
// See CreateArtifactUploadUrl for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CodeWhisperer) CreateArtifactUploadUrlWithContext(ctx aws.Context, input *CreateArtifactUploadUrlInput, opts ...request.Option) (*CreateArtifactUploadUrlOutput, error) {
	req, out := c.CreateArtifactUploadUrlRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGenerateCompletions = "GenerateCompletions"

// GenerateCompletionsRequest generates a "aws/request.Request" representing the
// client's request for the GenerateCompletions operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See GenerateCompletions for more information on using the GenerateCompletions
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the GenerateCompletionsRequest method.
//	req, resp := client.GenerateCompletionsRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/codewhispererruntime-2022-11-11/GenerateCompletions
func (c *CodeWhisperer) GenerateCompletionsRequest(input *GenerateCompletionsInput) (req *request.Request, output *GenerateCompletionsOutput) {
	op := &request.Operation{
		Name:       opGenerateCompletions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &request.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &GenerateCompletionsInput{}
	}

	output = &GenerateCompletionsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// GenerateCompletions API operation for Amazon CodeWhisperer.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CodeWhisperer's
// API operation GenerateCompletions for usage and error information.
//
// Returned Error Types:
//
//   - ThrottlingException
//
//   - InternalServerException
//
//   - ValidationException
//
//   - AccessDeniedException
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/codewhispererruntime-2022-11-11/GenerateCompletions
func (c *CodeWhisperer) GenerateCompletions(input *GenerateCompletionsInput) (*GenerateCompletionsOutput, error) {
	req, out := c.GenerateCompletionsRequest(input)
	return out, req.Send()
}

// GenerateCompletionsWithContext is the same as GenerateCompletions with the addition of
// the ability to pass a context and additional request options.
//
// See GenerateCompletions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CodeWhisperer) GenerateCompletionsWithContext(ctx aws.Context, input *GenerateCompletionsInput, opts ...request.Option) (*GenerateCompletionsOutput, error) {
	req, out := c.GenerateCompletionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// GenerateCompletionsPages iterates over the pages of a GenerateCompletions operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See GenerateCompletions method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//	// Example iterating over at most 3 pages of a GenerateCompletions operation.
//	pageNum := 0
//	err := client.GenerateCompletionsPages(params,
//	    func(page *codewhisperer.GenerateCompletionsOutput, lastPage bool) bool {
//	        pageNum++
//	        fmt.Println(page)
//	        return pageNum <= 3
//	    })
func (c *CodeWhisperer) GenerateCompletionsPages(input *GenerateCompletionsInput, fn func(*GenerateCompletionsOutput, bool) bool) error {
	return c.GenerateCompletionsPagesWithContext(aws.BackgroundContext(), input, fn)
}

// GenerateCompletionsPagesWithContext same as GenerateCompletionsPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CodeWhisperer) GenerateCompletionsPagesWithContext(ctx aws.Context, input *GenerateCompletionsInput, fn func(*GenerateCompletionsOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *GenerateCompletionsInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.GenerateCompletionsRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	for p.Next() {
		if !fn(p.Page().(*GenerateCompletionsOutput), !p.HasNextPage()) {
			break
		}
	}

	return p.Err()
}

const opGetCodeAnalysis = "GetCodeAnalysis"

// GetCodeAnalysisRequest generates a "aws/request.Request" representing the
// client's request for the GetCodeAnalysis operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See GetCodeAnalysis for more information on using the GetCodeAnalysis
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the GetCodeAnalysisRequest method.
//	req, resp := client.GetCodeAnalysisRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/codewhispererruntime-2022-11-11/GetCodeAnalysis
func (c *CodeWhisperer) GetCodeAnalysisRequest(input *GetCodeAnalysisInput) (req *request.Request, output *GetCodeAnalysisOutput) {
	op := &request.Operation{
		Name:       opGetCodeAnalysis,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetCodeAnalysisInput{}
	}

	output = &GetCodeAnalysisOutput{}
	req = c.newRequest(op, input, output)
	return
}

// GetCodeAnalysis API operation for Amazon CodeWhisperer.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CodeWhisperer's
// API operation GetCodeAnalysis for usage and error information.
//
// Returned Error Types:
//
//   - ThrottlingException
//
//   - ResourceNotFoundException
//
//   - InternalServerException
//
//   - ValidationException
//
//   - AccessDeniedException
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/codewhispererruntime-2022-11-11/GetCodeAnalysis
func (c *CodeWhisperer) GetCodeAnalysis(input *GetCodeAnalysisInput) (*GetCodeAnalysisOutput, error) {
	req, out := c.GetCodeAnalysisRequest(input)
	return out, req.Send()
}

// GetCodeAnalysisWithContext is the same as GetCodeAnalysis with the addition of
// the ability to pass a context and additional request options.
//
// See GetCodeAnalysis for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CodeWhisperer) GetCodeAnalysisWithContext(ctx aws.Context, input *GetCodeAnalysisInput, opts ...request.Option) (*GetCodeAnalysisOutput, error) {
	req, out := c.GetCodeAnalysisRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListCodeAnalysisFindings = "ListCodeAnalysisFindings"

// ListCodeAnalysisFindingsRequest generates a "aws/request.Request" representing the
// client's request for the ListCodeAnalysisFindings operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListCodeAnalysisFindings for more information on using the ListCodeAnalysisFindings
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the ListCodeAnalysisFindingsRequest method.
//	req, resp := client.ListCodeAnalysisFindingsRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/codewhispererruntime-2022-11-11/ListCodeAnalysisFindings
func (c *CodeWhisperer) ListCodeAnalysisFindingsRequest(input *ListCodeAnalysisFindingsInput) (req *request.Request, output *ListCodeAnalysisFindingsOutput) {
	op := &request.Operation{
		Name:       opListCodeAnalysisFindings,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &request.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListCodeAnalysisFindingsInput{}
	}

	output = &ListCodeAnalysisFindingsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListCodeAnalysisFindings API operation for Amazon CodeWhisperer.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CodeWhisperer's
// API operation ListCodeAnalysisFindings for usage and error information.
//
// Returned Error Types:
//
//   - ThrottlingException
//
//   - ResourceNotFoundException
//
//   - InternalServerException
//
//   - ValidationException
//
//   - AccessDeniedException
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/codewhispererruntime-2022-11-11/ListCodeAnalysisFindings
func (c *CodeWhisperer) ListCodeAnalysisFindings(input *ListCodeAnalysisFindingsInput) (*ListCodeAnalysisFindingsOutput, error) {
	req, out := c.ListCodeAnalysisFindingsRequest(input)
	return out, req.Send()
}

// ListCodeAnalysisFindingsWithContext is the same as ListCodeAnalysisFindings with the addition of
// the ability to pass a context and additional request options.
//
// See ListCodeAnalysisFindings for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CodeWhisperer) ListCodeAnalysisFindingsWithContext(ctx aws.Context, input *ListCodeAnalysisFindingsInput, opts ...request.Option) (*ListCodeAnalysisFindingsOutput, error) {
	req, out := c.ListCodeAnalysisFindingsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListCodeAnalysisFindingsPages iterates over the pages of a ListCodeAnalysisFindings operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListCodeAnalysisFindings method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//	// Example iterating over at most 3 pages of a ListCodeAnalysisFindings operation.
//	pageNum := 0
//	err := client.ListCodeAnalysisFindingsPages(params,
//	    func(page *codewhisperer.ListCodeAnalysisFindingsOutput, lastPage bool) bool {
//	        pageNum++
//	        fmt.Println(page)
//	        return pageNum <= 3
//	    })
func (c *CodeWhisperer) ListCodeAnalysisFindingsPages(input *ListCodeAnalysisFindingsInput, fn func(*ListCodeAnalysisFindingsOutput, bool) bool) error {
	return c.ListCodeAnalysisFindingsPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListCodeAnalysisFindingsPagesWithContext same as ListCodeAnalysisFindingsPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CodeWhisperer) ListCodeAnalysisFindingsPagesWithContext(ctx aws.Context, input *ListCodeAnalysisFindingsInput, fn func(*ListCodeAnalysisFindingsOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListCodeAnalysisFindingsInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListCodeAnalysisFindingsRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	for p.Next() {
		if !fn(p.Page().(*ListCodeAnalysisFindingsOutput), !p.HasNextPage()) {
			break
		}
	}

	return p.Err()
}

const opStartCodeAnalysis = "StartCodeAnalysis"

// StartCodeAnalysisRequest generates a "aws/request.Request" representing the
// client's request for the StartCodeAnalysis operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See StartCodeAnalysis for more information on using the StartCodeAnalysis
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the StartCodeAnalysisRequest method.
//	req, resp := client.StartCodeAnalysisRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/codewhispererruntime-2022-11-11/StartCodeAnalysis
func (c *CodeWhisperer) StartCodeAnalysisRequest(input *StartCodeAnalysisInput) (req *request.Request, output *StartCodeAnalysisOutput) {
	op := &request.Operation{
		Name:       opStartCodeAnalysis,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StartCodeAnalysisInput{}
	}

	output = &StartCodeAnalysisOutput{}
	req = c.newRequest(op, input, output)
	return
}

// StartCodeAnalysis API operation for Amazon CodeWhisperer.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CodeWhisperer's
// API operation StartCodeAnalysis for usage and error information.
//
// Returned Error Types:
//
//   - ThrottlingException
//
//   - ConflictException
//
//   - ResourceNotFoundException
//
//   - InternalServerException
//
//   - ValidationException
//
//   - AccessDeniedException
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/codewhispererruntime-2022-11-11/StartCodeAnalysis
func (c *CodeWhisperer) StartCodeAnalysis(input *StartCodeAnalysisInput) (*StartCodeAnalysisOutput, error) {
	req, out := c.StartCodeAnalysisRequest(input)
	return out, req.Send()
}

// StartCodeAnalysisWithContext is the same as StartCodeAnalysis with the addition of
// the ability to pass a context and additional request options.
//
// See StartCodeAnalysis for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CodeWhisperer) StartCodeAnalysisWithContext(ctx aws.Context, input *StartCodeAnalysisInput, opts ...request.Option) (*StartCodeAnalysisOutput, error) {
	req, out := c.StartCodeAnalysisRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AccessDeniedException struct {
	_            struct{}                  `type:"structure"`
	RespMetadata protocol.ResponseMetadata `json:"-" xml:"-"`

	Message_ *string `locationName:"message" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s AccessDeniedException) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s AccessDeniedException) GoString() string {
	return s.String()
}

func newErrorAccessDeniedException(v protocol.ResponseMetadata) error {
	return &AccessDeniedException{
		RespMetadata: v,
	}
}

// Code returns the exception type name.
func (s *AccessDeniedException) Code() string {
	return "AccessDeniedException"
}

// Message returns the exception's message.
func (s *AccessDeniedException) Message() string {
	if s.Message_ != nil {
		return *s.Message_
	}
	return ""
}

// OrigErr always returns nil, satisfies awserr.Error interface.
func (s *AccessDeniedException) OrigErr() error {
	return nil
}

func (s *AccessDeniedException) Error() string {
	return fmt.Sprintf("%s: %s", s.Code(), s.Message())
}

// Status code returns the HTTP status code for the request's response error.
func (s *AccessDeniedException) StatusCode() int {
	return s.RespMetadata.StatusCode
}

// RequestID returns the service's response RequestID for request.
func (s *AccessDeniedException) RequestID() string {
	return s.RespMetadata.RequestID
}

type Completion struct {
	_ struct{} `type:"structure"`

	// Content is a sensitive parameter and its value will be
	// replaced with "sensitive" in string returned by Completion's
	// String and GoString methods.
	// Content is a required field
	Content *string `locationName:"content" min:"1" type:"string" required:"true" sensitive:"true"`

	References []*Reference `locationName:"references" type:"list"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s Completion) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s Completion) GoString() string {
	return s.String()
}

// SetContent sets the Content field's value.
func (s *Completion) SetContent(v string) *Completion {
	s.Content = &v
	return s
}

// SetReferences sets the References field's value.
func (s *Completion) SetReferences(v []*Reference) *Completion {
	s.References = v
	return s
}

type ConflictException struct {
	_            struct{}                  `type:"structure"`
	RespMetadata protocol.ResponseMetadata `json:"-" xml:"-"`

	Message_ *string `locationName:"message" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ConflictException) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ConflictException) GoString() string {
	return s.String()
}

func newErrorConflictException(v protocol.ResponseMetadata) error {
	return &ConflictException{
		RespMetadata: v,
	}
}

// Code returns the exception type name.
func (s *ConflictException) Code() string {
	return "ConflictException"
}

// Message returns the exception's message.
func (s *ConflictException) Message() string {
	if s.Message_ != nil {
		return *s.Message_
	}
	return ""
}

// OrigErr always returns nil, satisfies awserr.Error interface.
func (s *ConflictException) OrigErr() error {
	return nil
}

func (s *ConflictException) Error() string {
	return fmt.Sprintf("%s: %s", s.Code(), s.Message())
}

// Status code returns the HTTP status code for the request's response error.
func (s *ConflictException) StatusCode() int {
	return s.RespMetadata.StatusCode
}

// RequestID returns the service's response RequestID for request.
func (s *ConflictException) RequestID() string {
	return s.RespMetadata.RequestID
}

type CreateArtifactUploadUrlInput struct {
	_ struct{} `type:"structure"`

	// ArtifactType is a required field
	ArtifactType *string `locationName:"artifactType" type:"string" required:"true" enum:"ArtifactType"`

	// ContentMd5 is a required field
	ContentMd5 *string `locationName:"contentMd5" min:"1" type:"string" required:"true"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s CreateArtifactUploadUrlInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s CreateArtifactUploadUrlInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateArtifactUploadUrlInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateArtifactUploadUrlInput"}
	if s.ArtifactType == nil {
		invalidParams.Add(request.NewErrParamRequired("ArtifactType"))
	}
	if s.ContentMd5 == nil {
		invalidParams.Add(request.NewErrParamRequired("ContentMd5"))
	}
	if s.ContentMd5 != nil && len(*s.ContentMd5) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ContentMd5", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetArtifactType sets the ArtifactType field's value.
func (s *CreateArtifactUploadUrlInput) SetArtifactType(v string) *CreateArtifactUploadUrlInput {
	s.ArtifactType = &v
	return s
}

// SetContentMd5 sets the ContentMd5 field's value.
func (s *CreateArtifactUploadUrlInput) SetContentMd5(v string) *CreateArtifactUploadUrlInput {
	s.ContentMd5 = &v
	return s
}

type CreateArtifactUploadUrlOutput struct {
	_ struct{} `type:"structure"`

	// UploadId is a required field
	UploadId *string `locationName:"uploadId" min:"1" type:"string" required:"true"`

	// UploadUrl is a required field
	UploadUrl *string `locationName:"uploadUrl" min:"1" type:"string" required:"true"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s CreateArtifactUploadUrlOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s CreateArtifactUploadUrlOutput) GoString() string {
	return s.String()
}

// SetUploadId sets the UploadId field's value.
func (s *CreateArtifactUploadUrlOutput) SetUploadId(v string) *CreateArtifactUploadUrlOutput {
	s.UploadId = &v
	return s
}

// SetUploadUrl sets the UploadUrl field's value.
func (s *CreateArtifactUploadUrlOutput) SetUploadUrl(v string) *CreateArtifactUploadUrlOutput {
	s.UploadUrl = &v
	return s
}

type FileContext struct {
	_ struct{} `type:"structure"`

	// Filename is a required field
	Filename *string `locationName:"filename" min:"1" type:"string" required:"true"`

	// LeftFileContent is a sensitive parameter and its value will be
	// replaced with "sensitive" in string returned by FileContext's
	// String and GoString methods.
	// LeftFileContent is a required field
	LeftFileContent *string `locationName:"leftFileContent" type:"string" required:"true" sensitive:"true"`

	// ProgrammingLanguage is a required field
	ProgrammingLanguage *ProgrammingLanguage `locationName:"programmingLanguage" type:"structure" required:"true"`

	// RightFileContent is a sensitive parameter and its value will be
	// replaced with "sensitive" in string returned by FileContext's
	// String and GoString methods.
	// RightFileContent is a required field
	RightFileContent *string `locationName:"rightFileContent" type:"string" required:"true" sensitive:"true"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s FileContext) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s FileContext) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *FileContext) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "FileContext"}
	if s.Filename == nil {
		invalidParams.Add(request.NewErrParamRequired("Filename"))
	}
	if s.Filename != nil && len(*s.Filename) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("Filename", 1))
	}
	if s.LeftFileContent == nil {
		invalidParams.Add(request.NewErrParamRequired("LeftFileContent"))
	}
	if s.ProgrammingLanguage == nil {
		invalidParams.Add(request.NewErrParamRequired("ProgrammingLanguage"))
	}
	if s.RightFileContent == nil {
		invalidParams.Add(request.NewErrParamRequired("RightFileContent"))
	}
	if s.ProgrammingLanguage != nil {
		if err := s.ProgrammingLanguage.Validate(); err != nil {
			invalidParams.AddNested("ProgrammingLanguage", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilename sets the Filename field's value.
func (s *FileContext) SetFilename(v string) *FileContext {
	s.Filename = &v
	return s
}

// SetLeftFileContent sets the LeftFileContent field's value.
func (s *FileContext) SetLeftFileContent(v string) *FileContext {
	s.LeftFileContent = &v
	return s
}

// SetProgrammingLanguage sets the ProgrammingLanguage field's value.
func (s *FileContext) SetProgrammingLanguage(v *ProgrammingLanguage) *FileContext {
	s.ProgrammingLanguage = v
	return s
}

// SetRightFileContent sets the RightFileContent field's value.
func (s *FileContext) SetRightFileContent(v string) *FileContext {
	s.RightFileContent = &v
	return s
}

type GenerateCompletionsInput struct {
	_ struct{} `type:"structure"`

	// FileContext is a required field
	FileContext *FileContext `locationName:"fileContext" type:"structure" required:"true"`

	MaxResults *int64 `locationName:"maxResults" min:"1" type:"integer"`

	NextToken *string `locationName:"nextToken" type:"string"`

	ReferenceTrackerConfiguration *ReferenceTrackerConfiguration `locationName:"referenceTrackerConfiguration" type:"structure"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s GenerateCompletionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s GenerateCompletionsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GenerateCompletionsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GenerateCompletionsInput"}
	if s.FileContext == nil {
		invalidParams.Add(request.NewErrParamRequired("FileContext"))
	}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(request.NewErrParamMinValue("MaxResults", 1))
	}
	if s.FileContext != nil {
		if err := s.FileContext.Validate(); err != nil {
			invalidParams.AddNested("FileContext", err.(request.ErrInvalidParams))
		}
	}
	if s.ReferenceTrackerConfiguration != nil {
		if err := s.ReferenceTrackerConfiguration.Validate(); err != nil {
			invalidParams.AddNested("ReferenceTrackerConfiguration", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFileContext sets the FileContext field's value.
func (s *GenerateCompletionsInput) SetFileContext(v *FileContext) *GenerateCompletionsInput {
	s.FileContext = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *GenerateCompletionsInput) SetMaxResults(v int64) *GenerateCompletionsInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *GenerateCompletionsInput) SetNextToken(v string) *GenerateCompletionsInput {
	s.NextToken = &v
	return s
}

// SetReferenceTrackerConfiguration sets the ReferenceTrackerConfiguration field's value.
func (s *GenerateCompletionsInput) SetReferenceTrackerConfiguration(v *ReferenceTrackerConfiguration) *GenerateCompletionsInput {
	s.ReferenceTrackerConfiguration = v
	return s
}

type GenerateCompletionsOutput struct {
	_ struct{} `type:"structure"`

	Completions []*Completion `locationName:"completions" type:"list"`

	NextToken *string `locationName:"nextToken" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s GenerateCompletionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s GenerateCompletionsOutput) GoString() string {
	return s.String()
}

// SetCompletions sets the Completions field's value.
func (s *GenerateCompletionsOutput) SetCompletions(v []*Completion) *GenerateCompletionsOutput {
	s.Completions = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *GenerateCompletionsOutput) SetNextToken(v string) *GenerateCompletionsOutput {
	s.NextToken = &v
	return s
}

type GetCodeAnalysisInput struct {
	_ struct{} `type:"structure"`

	// JobId is a required field
	JobId *string `locationName:"jobId" min:"1" type:"string" required:"true"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s GetCodeAnalysisInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s GetCodeAnalysisInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetCodeAnalysisInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetCodeAnalysisInput"}
	if s.JobId == nil {
		invalidParams.Add(request.NewErrParamRequired("JobId"))
	}
	if s.JobId != nil && len(*s.JobId) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("JobId", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetJobId sets the JobId field's value.
func (s *GetCodeAnalysisInput) SetJobId(v string) *GetCodeAnalysisInput {
	s.JobId = &v
	return s
}

type GetCodeAnalysisOutput struct {
	_ struct{} `type:"structure"`

	ErrorMessage *string `locationName:"errorMessage" type:"string"`

	// Status is a required field
	Status *string `locationName:"status" type:"string" required:"true" enum:"CodeAnalysisStatus"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s GetCodeAnalysisOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s GetCodeAnalysisOutput) GoString() string {
	return s.String()
}

// SetErrorMessage sets the ErrorMessage field's value.
func (s *GetCodeAnalysisOutput) SetErrorMessage(v string) *GetCodeAnalysisOutput {
	s.ErrorMessage = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *GetCodeAnalysisOutput) SetStatus(v string) *GetCodeAnalysisOutput {
	s.Status = &v
	return s
}

type InternalServerException struct {
	_            struct{}                  `type:"structure"`
	RespMetadata protocol.ResponseMetadata `json:"-" xml:"-"`

	Message_ *string `locationName:"message" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s InternalServerException) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s InternalServerException) GoString() string {
	return s.String()
}

func newErrorInternalServerException(v protocol.ResponseMetadata) error {
	return &InternalServerException{
		RespMetadata: v,
	}
}

// Code returns the exception type name.
func (s *InternalServerException) Code() string {
	return "InternalServerException"
}

// Message returns the exception's message.
func (s *InternalServerException) Message() string {
	if s.Message_ != nil {
		return *s.Message_
	}
	return ""
}

// OrigErr always returns nil, satisfies awserr.Error interface.
func (s *InternalServerException) OrigErr() error {
	return nil
}

func (s *InternalServerException) Error() string {
	return fmt.Sprintf("%s: %s", s.Code(), s.Message())
}

// Status code returns the HTTP status code for the request's response error.
func (s *InternalServerException) StatusCode() int {
	return s.RespMetadata.StatusCode
}

// RequestID returns the service's response RequestID for request.
func (s *InternalServerException) RequestID() string {
	return s.RespMetadata.RequestID
}

type ListCodeAnalysisFindingsInput struct {
	_ struct{} `type:"structure"`

	// CodeAnalysisFindingsSchema is a required field
	CodeAnalysisFindingsSchema *string `locationName:"codeAnalysisFindingsSchema" type:"string" required:"true" enum:"CodeAnalysisFindingsSchema"`

	// JobId is a required field
	JobId *string `locationName:"jobId" min:"1" type:"string" required:"true"`

	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListCodeAnalysisFindingsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListCodeAnalysisFindingsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListCodeAnalysisFindingsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListCodeAnalysisFindingsInput"}
	if s.CodeAnalysisFindingsSchema == nil {
		invalidParams.Add(request.NewErrParamRequired("CodeAnalysisFindingsSchema"))
	}
	if s.JobId == nil {
		invalidParams.Add(request.NewErrParamRequired("JobId"))
	}
	if s.JobId != nil && len(*s.JobId) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("JobId", 1))
	}
	if s.NextToken != nil && len(*s.NextToken) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("NextToken", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCodeAnalysisFindingsSchema sets the CodeAnalysisFindingsSchema field's value.
func (s *ListCodeAnalysisFindingsInput) SetCodeAnalysisFindingsSchema(v string) *ListCodeAnalysisFindingsInput {
	s.CodeAnalysisFindingsSchema = &v
	return s
}

// SetJobId sets the JobId field's value.
func (s *ListCodeAnalysisFindingsInput) SetJobId(v string) *ListCodeAnalysisFindingsInput {
	s.JobId = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListCodeAnalysisFindingsInput) SetNextToken(v string) *ListCodeAnalysisFindingsInput {
	s.NextToken = &v
	return s
}

type ListCodeAnalysisFindingsOutput struct {
	_ struct{} `type:"structure"`

	// CodeAnalysisFindings is a required field
	CodeAnalysisFindings *string `locationName:"codeAnalysisFindings" type:"string" required:"true"`

	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListCodeAnalysisFindingsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListCodeAnalysisFindingsOutput) GoString() string {
	return s.String()
}

// SetCodeAnalysisFindings sets the CodeAnalysisFindings field's value.
func (s *ListCodeAnalysisFindingsOutput) SetCodeAnalysisFindings(v string) *ListCodeAnalysisFindingsOutput {
	s.CodeAnalysisFindings = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListCodeAnalysisFindingsOutput) SetNextToken(v string) *ListCodeAnalysisFindingsOutput {
	s.NextToken = &v
	return s
}

type ProgrammingLanguage struct {
	_ struct{} `type:"structure"`

	// LanguageName is a required field
	LanguageName *string `locationName:"languageName" min:"1" type:"string" required:"true"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ProgrammingLanguage) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ProgrammingLanguage) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ProgrammingLanguage) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ProgrammingLanguage"}
	if s.LanguageName == nil {
		invalidParams.Add(request.NewErrParamRequired("LanguageName"))
	}
	if s.LanguageName != nil && len(*s.LanguageName) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("LanguageName", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetLanguageName sets the LanguageName field's value.
func (s *ProgrammingLanguage) SetLanguageName(v string) *ProgrammingLanguage {
	s.LanguageName = &v
	return s
}

type Reference struct {
	_ struct{} `type:"structure"`

	LicenseName *string `locationName:"licenseName" min:"1" type:"string"`

	RecommendationContentSpan *Span `locationName:"recommendationContentSpan" type:"structure"`

	Repository *string `locationName:"repository" min:"1" type:"string"`

	Url *string `locationName:"url" min:"1" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s Reference) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s Reference) GoString() string {
	return s.String()
}

// SetLicenseName sets the LicenseName field's value.
func (s *Reference) SetLicenseName(v string) *Reference {
	s.LicenseName = &v
	return s
}

// SetRecommendationContentSpan sets the RecommendationContentSpan field's value.
func (s *Reference) SetRecommendationContentSpan(v *Span) *Reference {
	s.RecommendationContentSpan = v
	return s
}

// SetRepository sets the Repository field's value.
func (s *Reference) SetRepository(v string) *Reference {
	s.Repository = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *Reference) SetUrl(v string) *Reference {
	s.Url = &v
	return s
}

type ReferenceTrackerConfiguration struct {
	_ struct{} `type:"structure"`

	// RecommendationsWithReferences is a required field
	RecommendationsWithReferences *string `locationName:"recommendationsWithReferences" type:"string" required:"true" enum:"RecommendationsWithReferencesPreference"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ReferenceTrackerConfiguration) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ReferenceTrackerConfiguration) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ReferenceTrackerConfiguration) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ReferenceTrackerConfiguration"}
	if s.RecommendationsWithReferences == nil {
		invalidParams.Add(request.NewErrParamRequired("RecommendationsWithReferences"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetRecommendationsWithReferences sets the RecommendationsWithReferences field's value.
func (s *ReferenceTrackerConfiguration) SetRecommendationsWithReferences(v string) *ReferenceTrackerConfiguration {
	s.RecommendationsWithReferences = &v
	return s
}

type ResourceNotFoundException struct {
	_            struct{}                  `type:"structure"`
	RespMetadata protocol.ResponseMetadata `json:"-" xml:"-"`

	Message_ *string `locationName:"message" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ResourceNotFoundException) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ResourceNotFoundException) GoString() string {
	return s.String()
}

func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {
	return &ResourceNotFoundException{
		RespMetadata: v,
	}
}

// Code returns the exception type name.
func (s *ResourceNotFoundException) Code() string {
	return "ResourceNotFoundException"
}

// Message returns the exception's message.
func (s *ResourceNotFoundException) Message() string {
	if s.Message_ != nil {
		return *s.Message_
	}
	return ""
}

// OrigErr always returns nil, satisfies awserr.Error interface.
func (s *ResourceNotFoundException) OrigErr() error {
	return nil
}

func (s *ResourceNotFoundException) Error() string {
	return fmt.Sprintf("%s: %s", s.Code(), s.Message())
}

// Status code returns the HTTP status code for the request's response error.
func (s *ResourceNotFoundException) StatusCode() int {
	return s.RespMetadata.StatusCode
}

// RequestID returns the service's response RequestID for request.
func (s *ResourceNotFoundException) RequestID() string {
	return s.RespMetadata.RequestID
}

type Span struct {
	_ struct{} `type:"structure"`

	End *int64 `locationName:"end" type:"integer"`

	Start *int64 `locationName:"start" type:"integer"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s Span) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s Span) GoString() string {
	return s.String()
}

// SetEnd sets the End field's value.
func (s *Span) SetEnd(v int64) *Span {
	s.End = &v
	return s
}

// SetStart sets the Start field's value.
func (s *Span) SetStart(v int64) *Span {
	s.Start = &v
	return s
}

type StartCodeAnalysisInput struct {
	_ struct{} `type:"structure"`

	// Artifacts is a required field
	Artifacts map[string]*string `locationName:"artifacts" min:"1" type:"map" required:"true"`

	ClientToken *string `locationName:"clientToken" min:"1" type:"string" idempotencyToken:"true"`

	// ProgrammingLanguage is a required field
	ProgrammingLanguage *ProgrammingLanguage `locationName:"programmingLanguage" type:"structure" required:"true"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s StartCodeAnalysisInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s StartCodeAnalysisInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *StartCodeAnalysisInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "StartCodeAnalysisInput"}
	if s.Artifacts == nil {
		invalidParams.Add(request.NewErrParamRequired("Artifacts"))
	}
	if s.Artifacts != nil && len(s.Artifacts) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("Artifacts", 1))
	}
	if s.ClientToken != nil && len(*s.ClientToken) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ClientToken", 1))
	}
	if s.ProgrammingLanguage == nil {
		invalidParams.Add(request.NewErrParamRequired("ProgrammingLanguage"))
	}
	if s.ProgrammingLanguage != nil {
		if err := s.ProgrammingLanguage.Validate(); err != nil {
			invalidParams.AddNested("ProgrammingLanguage", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetArtifacts sets the Artifacts field's value.
func (s *StartCodeAnalysisInput) SetArtifacts(v map[string]*string) *StartCodeAnalysisInput {
	s.Artifacts = v
	return s
}

// SetClientToken sets the ClientToken field's value.
func (s *StartCodeAnalysisInput) SetClientToken(v string) *StartCodeAnalysisInput {
	s.ClientToken = &v
	return s
}

// SetProgrammingLanguage sets the ProgrammingLanguage field's value.
func (s *StartCodeAnalysisInput) SetProgrammingLanguage(v *ProgrammingLanguage) *StartCodeAnalysisInput {
	s.ProgrammingLanguage = v
	return s
}

type StartCodeAnalysisOutput struct {
	_ struct{} `type:"structure"`

	ErrorMessage *string `locationName:"errorMessage" type:"string"`

	// JobId is a required field
	JobId *string `locationName:"jobId" min:"1" type:"string" required:"true"`

	// Status is a required field
	Status *string `locationName:"status" type:"string" required:"true" enum:"CodeAnalysisStatus"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s StartCodeAnalysisOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s StartCodeAnalysisOutput) GoString() string {
	return s.String()
}

// SetErrorMessage sets the ErrorMessage field's value.
func (s *StartCodeAnalysisOutput) SetErrorMessage(v string) *StartCodeAnalysisOutput {
	s.ErrorMessage = &v
	return s
}

// SetJobId sets the JobId field's value.
func (s *StartCodeAnalysisOutput) SetJobId(v string) *StartCodeAnalysisOutput {
	s.JobId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *StartCodeAnalysisOutput) SetStatus(v string) *StartCodeAnalysisOutput {
	s.Status = &v
	return s
}

type ThrottlingException struct {
	_            struct{}                  `type:"structure"`
	RespMetadata protocol.ResponseMetadata `json:"-" xml:"-"`

	Message_ *string `locationName:"message" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ThrottlingException) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ThrottlingException) GoString() string {
	return s.String()
}

func newErrorThrottlingException(v protocol.ResponseMetadata) error {
	return &ThrottlingException{
		RespMetadata: v,
	}
}

// Code returns the exception type name.
func (s *ThrottlingException) Code() string {
	return "ThrottlingException"
}

// Message returns the exception's message.
func (s *ThrottlingException) Message() string {
	if s.Message_ != nil {
		return *s.Message_
	}
	return ""
}

// OrigErr always returns nil, satisfies awserr.Error interface.
func (s *ThrottlingException) OrigErr() error {
	return nil
}

func (s *ThrottlingException) Error() string {
	return fmt.Sprintf("%s: %s", s.Code(), s.Message())
}

// Status code returns the HTTP status code for the request's response error.
func (s *ThrottlingException) StatusCode() int {
	return s.RespMetadata.StatusCode
}

// RequestID returns the service's response RequestID for request.
func (s *ThrottlingException) RequestID() string {
	return s.RespMetadata.RequestID
}

type ValidationException struct {
	_            struct{}                  `type:"structure"`
	RespMetadata protocol.ResponseMetadata `json:"-" xml:"-"`

	Message_ *string `locationName:"message" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ValidationException) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ValidationException) GoString() string {
	return s.String()
}

func newErrorValidationException(v protocol.ResponseMetadata) error {
	return &ValidationException{
		RespMetadata: v,
	}
}

// Code returns the exception type name.
func (s *ValidationException) Code() string {
	return "ValidationException"
}

// Message returns the exception's message.
func (s *ValidationException) Message() string {
	if s.Message_ != nil {
		return *s.Message_
	}
	return ""
}

// OrigErr always returns nil, satisfies awserr.Error interface.
func (s *ValidationException) OrigErr() error {
	return nil
}

func (s *ValidationException) Error() string {
	return fmt.Sprintf("%s: %s", s.Code(), s.Message())
}

// Status code returns the HTTP status code for the request's response error.
func (s *ValidationException) StatusCode() int {
	return s.RespMetadata.StatusCode
}

// RequestID returns the service's response RequestID for request.
func (s *ValidationException) RequestID() string {
	return s.RespMetadata.RequestID
}

const (
	// ArtifactTypeSourceCode is a ArtifactType enum value
	ArtifactTypeSourceCode = "SourceCode"

	// ArtifactTypeBuiltJars is a ArtifactType enum value
	ArtifactTypeBuiltJars = "BuiltJars"
)

// ArtifactType_Values returns all elements of the ArtifactType enum
func ArtifactType_Values() []string {
	return []string{
		ArtifactTypeSourceCode,
		ArtifactTypeBuiltJars,
	}
}

const (
	// CodeAnalysisFindingsSchemaCodeanalysisFindings10 is a CodeAnalysisFindingsSchema enum value
	CodeAnalysisFindingsSchemaCodeanalysisFindings10 = "codeanalysis/findings/1.0"
)

// CodeAnalysisFindingsSchema_Values returns all elements of the CodeAnalysisFindingsSchema enum
func CodeAnalysisFindingsSchema_Values() []string {
	return []string{
		CodeAnalysisFindingsSchemaCodeanalysisFindings10,
	}
}

const (
	// CodeAnalysisStatusCompleted is a CodeAnalysisStatus enum value
	CodeAnalysisStatusCompleted = "Completed"

	// CodeAnalysisStatusPending is a CodeAnalysisStatus enum value
	CodeAnalysisStatusPending = "Pending"

	// CodeAnalysisStatusFailed is a CodeAnalysisStatus enum value
	CodeAnalysisStatusFailed = "Failed"
)

// CodeAnalysisStatus_Values returns all elements of the CodeAnalysisStatus enum
func CodeAnalysisStatus_Values() []string {
	return []string{
		CodeAnalysisStatusCompleted,
		CodeAnalysisStatusPending,
		CodeAnalysisStatusFailed,
	}
}

const (
	// RecommendationsWithReferencesPreferenceBlock is a RecommendationsWithReferencesPreference enum value
	RecommendationsWithReferencesPreferenceBlock = "BLOCK"

	// RecommendationsWithReferencesPreferenceAllow is a RecommendationsWithReferencesPreference enum value
	RecommendationsWithReferencesPreferenceAllow = "ALLOW"
)

// RecommendationsWithReferencesPreference_Values returns all elements of the RecommendationsWithReferencesPreference enum
func RecommendationsWithReferencesPreference_Values() []string {
	return []string{
		RecommendationsWithReferencesPreferenceBlock,
		RecommendationsWithReferencesPreferenceAllow,
	}
}
